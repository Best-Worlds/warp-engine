#!/bin/bash

ROOT_DIR=`git rev-parse --show-toplevel`

. "$ROOT_DIR/.warp/variables.sh"
. "$ROOT_DIR/.warp/lib/message.sh"

# Hook parameters
COMMIT_MSG=$(git rev-parse --abbrev-ref HEAD)

# Basic Configurations
DOCKER_COMPOSE_FILE="docker-compose-warp.yml"
STANDARD="Magento2"

# Directory Configurations
LOG_DIR="${PROJECTPATH}/var/log/git"
CURRENT_DATE=$(date '+%Y-%m-%d_%H-%M-%S')
LOG_FILENAME="${CURRENT_DATE}.log"

STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD`
NOT_STAGED_FILES_CMD=`git status -s | awk '/MM / { print $2 }'`

if [ "$#" -eq 1 ]
then
	oIFS=$IFS
	IFS='
	'
	SFILES="$1"
	IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}
SNOTSTAGEDFILES=${SNOTSTAGEDFILES:-$NOT_STAGED_FILES_CMD}

if [ "$SFILES" != "" ]
then
    warp_message ""
    warp_message_info2 "The following files has been modified:"
    warp_message ""

    i=1
    for FILE in $SFILES
    do
        warp_message_info2 "${i}- ${FILE}"
        # Check if the file has changes
        if [[ "${SNOTSTAGEDFILES[*]}" =~ ${FILE} ]]
        then
            # Read user input, assign stdin to keyboard
            exec < /dev/tty

            while read -p "$(warp_message_warn "This file has unstaged changes. Do you want to add them to the commit? (Y/n) ")" response; do
                case $response in
                    "" )
                        git add ${FILE}
                        break;;
                    [Yy] )
                        git add ${FILE}
                        break;;
                    [Nn] )
                        warp_message ""
                        warp_message_error "Commit your file changes before moving forward."
                        exit 1
                        break;;
                    * ) warp_message_warn "Please answer y (yes) or n (no):" && continue;
                esac
            done
        fi

        i=$((i+1))
    done
else
    exit 0
fi

warp_message ""
warp_message_warn "Checking PHP syntax..."
warp_message ""

for FILE in $SFILES
do
  FILE_EXTENSION=${FILE##*.}
    if [ ! "${FILE_EXTENSION}" = "php" ]
    then
        continue
    fi

	docker-compose -f ${DOCKER_COMPOSE_FILE} exec -u www-data -T php /bin/bash -c "php -l -d display_errors=0 ${FILE}"
	if [ $? != 0 ]
	then
	    warp_message ""
	    warp_message_error "Fix the syntax errors before commit."
		exit 1
	fi
	FILES="$FILES $FILE"
done

if [ "$FILES" != "" ]
then

    # Creates log directory within git override folder
    if [ ! -d ${LOG_DIR} ]; then
        mkdir ${LOG_DIR} && chmod 775 ${LOG_DIR}
    fi

    # Creates new directory based on commit message (sluged)
    COMMIT_LOG_DIR=`echo ${COMMIT_MSG} | iconv -t ascii//TRANSLIT | sed -E 's/[~\^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+\|-+$//g' | sed -E 's/^-+//g' | sed -E 's/-+$//g' | tr A-Z a-z`
    FULL_COMMIT_LOG_DIR=${LOG_DIR}/${COMMIT_LOG_DIR}

    if [ ! -d ${FULL_COMMIT_LOG_DIR} ]; then
        mkdir ${FULL_COMMIT_LOG_DIR} && chmod 775 ${FULL_COMMIT_LOG_DIR}
    fi

    QTY_FILES=$(ls -la ${FULL_COMMIT_LOG_DIR} | grep .log | wc -l)
    CURRENT_FILE_NUMBER=$((QTY_FILES+1))
    LOG_FILE=${FULL_COMMIT_LOG_DIR}/${CURRENT_FILE_NUMBER}-${LOG_FILENAME}

    warp_message ""
    TMP_MESSAGE="Running ${STANDARD} Coding standards validations..."
    warp_message_warn "${TMP_MESSAGE}" && echo "${TMP_MESSAGE}" >> ${LOG_FILE}

    docker-compose -f ${DOCKER_COMPOSE_FILE} exec -u www-data -T php /bin/bash -c "vendor/bin/phpcs --standard=${STANDARD} $FILES" >> ${LOG_FILE}

    if [ $? != 0 ]
    then

        echo -e  "Coding standards errors have been detected. Trying to correct them automatically..." >> ${LOG_FILE}
        docker-compose -f ${DOCKER_COMPOSE_FILE} exec -u www-data -T php /bin/bash -c "vendor/bin/phpcbf --standard=${STANDARD} $FILES" >> ${LOG_FILE}

        # No errors to be fixed automatically
        if [ $? = 0 ]
        then
            warp_message ""
            warp_message_error "Review the report in order to fix the remaining errors => ${LOG_FILE}"
            exit 1
        fi

        # Errors has been automatically corrected. Re-adding files and re-run coding standards validation
        git add $FILES

        echo -e "\nRunning ${STANDARD} Coding standards validations again..." >> ${LOG_FILE}
        docker-compose -f ${DOCKER_COMPOSE_FILE} exec -u www-data -T php /bin/bash -c "vendor/bin/phpcs --standard=${STANDARD} $FILES" >> ${LOG_FILE}

        if [ $? != 0 ]
        then
            warp_message ""
            warp_message_error "Review the report in order to fix the remaining errors => ${LOG_FILE}"
            exit 1
        fi
    fi

    warp_message ""
    TMP_MESSAGE="Nothing to correct after code validation processes execution. Changes ready to be committed."
    warp_message_ok "${TMP_MESSAGE}" && echo -e "\n${TMP_MESSAGE}" >> ${LOG_FILE}
    warp_message ""
  fi

exit $?
