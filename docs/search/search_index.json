{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Warp Engine Overview 1 2 3 4 5 6 7 8 9 10 11 12 ___ ____ ____ _____ ____ ___ ______ ___ _ ___ __ ___ ____ ___ | | / / ___ __________ ____ | | /| / / __ `/ ___ / __ \\ __ ___ ___ | |/ |/ / / _ / / / / / _ / / __ ___ _ | __ /| __ / \\ __ , _ / _ / / . ___ / ___ ____ __ ___ ____ / _ / ___ __ __ ____ ___ ____ __ ______ ____ ___ ______ ____ ____ WARP ENGINE - Speeding up ! your development infraestructure Features Nginx PHP MySQL Rabbit MailHog Elasticsearch Requirements Docker community edition docker-compose Installation Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp Getting started After download the warp binary file, you should initialize your dockerized infraestrucutre running the following command: 1 ./warp init Useful warp commands This repo comes with some useful bash command: Command Description warp --help Shows the warp tool help warp [command] --help Shows the specific command help. For instance: warp php --help warp info Shows the configured values and useful information for each services warp init Initialize the warp framework the first time before to start the project warp start Starts the containers warp stop Stops the containers warp reset Reset config to default warp fix fix common problems with permissions Changelog See what has changed: changes","title":"Introduction"},{"location":"index.html#warp-engine","text":"","title":"Warp Engine"},{"location":"index.html#overview","text":"1 2 3 4 5 6 7 8 9 10 11 12 ___ ____ ____ _____ ____ ___ ______ ___ _ ___ __ ___ ____ ___ | | / / ___ __________ ____ | | /| / / __ `/ ___ / __ \\ __ ___ ___ | |/ |/ / / _ / / / / / _ / / __ ___ _ | __ /| __ / \\ __ , _ / _ / / . ___ / ___ ____ __ ___ ____ / _ / ___ __ __ ____ ___ ____ __ ______ ____ ___ ______ ____ ____ WARP ENGINE - Speeding up ! your development infraestructure","title":"Overview"},{"location":"index.html#features","text":"Nginx PHP MySQL Rabbit MailHog Elasticsearch","title":"Features"},{"location":"index.html#requirements","text":"Docker community edition docker-compose","title":"Requirements"},{"location":"index.html#installation","text":"Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp","title":"Installation"},{"location":"index.html#getting-started","text":"After download the warp binary file, you should initialize your dockerized infraestrucutre running the following command: 1 ./warp init","title":"Getting started"},{"location":"index.html#useful-warp-commands","text":"This repo comes with some useful bash command: Command Description warp --help Shows the warp tool help warp [command] --help Shows the specific command help. For instance: warp php --help warp info Shows the configured values and useful information for each services warp init Initialize the warp framework the first time before to start the project warp start Starts the containers warp stop Stops the containers warp reset Reset config to default warp fix fix common problems with permissions","title":"Useful warp commands"},{"location":"index.html#changelog","text":"","title":"Changelog"},{"location":"index.html#see-what-has-changed-changes","text":"","title":"See what has changed: changes"},{"location":"faq/index.html","text":"Requeriments and dependencies How to install Docker Sync for Mac How to configure Xdebug How to use Composer Setting up the Cron Jobs Installing and configuring Grunt","title":"FAQs"},{"location":"features/magento.html","text":"","title":"Magento"},{"location":"features/oro.html","text":"","title":"Oro"},{"location":"features/services.html","text":"Services Nginx PHP MySQL Rabbit MailHog Elasticsearch","title":"Services"},{"location":"features/services.html#services","text":"Nginx PHP MySQL Rabbit MailHog Elasticsearch","title":"Services"},{"location":"installation/linux.html","text":"Install Docker and docker-compose on Linux The easiest way is to create a file with name install_docker.sh, paste the script below and give it execute permissions. 1 2 chmod +x install_docker.sh sudo ./install_docker.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER","title":"Linux"},{"location":"installation/linux.html#install-docker-and-docker-compose-on-linux","text":"The easiest way is to create a file with name install_docker.sh, paste the script below and give it execute permissions. 1 2 chmod +x install_docker.sh sudo ./install_docker.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER","title":"Install Docker and docker-compose on Linux"},{"location":"installation/mac.html","text":"About Docker Desktop Configuration Preferences -> Advanced CPU - set minimum 2 CPUs ( default = \"1CPU\" ). MEMORY - set minimum 4 GB ( default = \"2GB\" ).","title":"MacOS"},{"location":"installation/mac.html#about-docker-desktop","text":"","title":"About Docker Desktop"},{"location":"installation/mac.html#configuration","text":"","title":"Configuration"},{"location":"installation/mac.html#preferences-advanced","text":"CPU - set minimum 2 CPUs ( default = \"1CPU\" ). MEMORY - set minimum 4 GB ( default = \"2GB\" ).","title":"Preferences -&gt; Advanced"},{"location":"started/requirements.html","text":"Requirements Docker community edition v17.05 docker-compose v1.21 For OSX docker-sync v0.5.11","title":"Requirements"},{"location":"started/requirements.html#requirements","text":"Docker community edition v17.05 docker-compose v1.21","title":"Requirements"},{"location":"started/requirements.html#for-osx","text":"docker-sync v0.5.11","title":"For OSX"},{"location":"started/usage.html","text":"","title":"Usage"},{"location":"troubleshooting/index.html","text":"troubleshooting","title":"Troubleshooting"},{"location":"troubleshooting/index.html#troubleshooting","text":"","title":"troubleshooting"},{"location":"workshop/workshop.html","text":"Workshop video","title":"Workshop video"}]}